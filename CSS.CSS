2020-3-3 (폰트 색깔 바꾸기  바디아래목차 파란색에서 빨간색으로) (<a></a> 는 링크)

<!doctype html>
<html>
<head>
  <title>WEB - CSS</title>
  <meta charset="utf-8">
</head>
<body>
  <h1><a href="index.html">WEB</a></h1>
  <ol>
    <li><a href="1.html">HTML</a></li>
    <li><a href="2.html">CSS</a></li>
    <li><a href="3.html">JavaScript</a></li>
  </ol>
  <h2>CSS</h2>
  <p>
    Cascading Style Sheets (CSS) is a style sheet language used for describing the presentation of a document written in 
    a markup language.[1] Although most often used to set the visual style of web pages and user interfaces written in HTML and XHTML,
    the language can be applied to any XML document, including plain XML, SVG and XUL, and is applicable to rendering in speech,
    or on other media. Along with HTML and JavaScript, CSS is a cornerstone technology used by most websites to create visually 
    engaging webpages, user interfaces for web applications, and user interfaces for many mobile applications.
  </p>
  </body>
  </html>

(빨간색으로 바꿈  <font color="원하는색"></font> )

 <h1><a href="index.html"><font color="red">WEB</a></h1></font>
  <ol>
    <li><a href="1.html"><font color="red">HTML</a></li></font>
    <li><a href="2.html"><font color="red">CSS</a></li></font>
    <li><a href="3.html"><font color="red">JavaScript</a></li></font>

2020-3-6 (CSS언어 사용해서 빨간색으로 바꾸기 a { color:red;} a라는 태그를 빨간색으로 하기 {} 셀렉터

<style>
    a {
      color:red;
  }
  </style>
</head>
<body>
  <h1><a href="index.html">WEB</a></h1>
  <ol>
    <li><a href="1.html">HTML</a></li>
    <li><a href="2.html">CSS</a></li>
    <li><a href="3.html">JavaScript</a></li>
  </ol>
  
  (원하는 글만 색깔을 넣을때 CSS문법인 style 을 적고함)

  <style>
    a {
      color:black;                                        -> 
    }
  </style>
</head>
<body>
  <h1><a href="index.html">WEB</a></h1>
  <ol>
    <li><a href="1.html">HTML</a></li>
    <li><a href="2.html" style="color:red">CSS</a></li>   -> style="color:red" 이건 html ,style의 속성은 그 값으로 반드시 CSS효과가온다
    <li><a href="3.html">JavaScript</a></li>
  </ol>

  
  1. style 태그를 쓴다  ( 위에꺼 )
  2. style 속성을 쓴다  ( 아래꺼 )
  
  (밑줄없애기)
  
   <style>
    a {
      color:black;
      text-decoration: none;
    }
  </style>
  
  ; <- 끝나는것을 구분하기위해 꾸며주고 꼭하기
      (밑줄만들기)

       <li><a href="2.html" 
      style="color:red;text-decoration:underline">CSS</a></li>

2020-3-11 (h1을 가운데로 ,원하는 글씨크기) font-size:원하는값; text-aling:원하는위치;

a(웹페이지에있는모든a) { 
                         color(property 속성):red;(declaration = value 값 <- 어떤효과를 줄것인가

<!doctype html>
<html>
<head>
  <title>WEB - CSS</title>
  <meta charset="utf-8">
  <style>
    a {
      color:black;
      text-decoration: none;
    }
    h1 {
      font-size:45px;
      text-align: center;
    }
  </style>
</head>

  (calss 속성의 값은 여러개의 값이 들어올수있고 띄어쓰기로 구분, 하나의 태그에는 여러개의 속성이 들어오고 여러개의 선택자를 통해서
  하나의 태그를 공동으로 제어)
  (CSS만 빨간색으로 표기)
  
   <style>
    a {
        text-decoration: none;
        color:black;
    }
    .saw {
      color:gray;
    }
    .active {
      color:red;
    }
    h1 {
      font-size:45px;
      text-align: center;
    }
  </style>
</head>
<body>
  <h1><a href="index.html">WEB</a></h1>
  <ol>
    <li><a href="1.html" class="saw">HTML</a></li>
    <li><a href="2.html" class="saw active">CSS</a></li>
    <li><a href="3.html">JavaScript</a></li>
  </ol>
  -> 이방법은 좋지않음 -> 가까이에 있는 명령이 더 큰 영향력을 갖기때문
   
    <style>
    a {
        text-decoration: none;
        color:black;
    }
    #active {
      color:red;
    }
    .saw {
      color:gray;
    }
    
    h1 {
      font-size:45px;
      text-align: center;
    }
  </style>
</head>
<body>
  <h1><a href="index.html">WEB</a></h1>
  <ol>
    <li><a href="1.html" class="saw">HTML</a></li>
    <li><a href="2.html" class="saw" id="active">CSS</a></li>
    <li><a href="3.html">JavaScript</a></li>
  </ol>
 
 (우선순위 높이기 id 선택자)  id는 # saw는 .
 #active 는 .saw보다 늦게 등장했어도 붉은색이 됨
  id선택자랑 class 선택자가 붙으면 id 선택자가 이김
  class 선택자와 태그 선택자랑 붙으면 class선택자가 이김
  
  태그선택자 < class선택자 < id선택자
  
  모두 class선택자라면 가장 마지막에 등장하는 선택자가 우선순위가 높다
  
  
  
